html, body {
  height: 100vh;
  width: 100vw;
}

input,button,textarea,select {
  background-color: var(--gui-color-background);
  border: 1px solid var(--gui-color-border);
  color: var(--gui-color-text)
}

button:hover {
  background-color: var(--gui-color-highlight);
}

.gui-root {

  /* Make the position relative so that child elements can use absolute 
   * positioning
   */
  position: relative;

  background-color: var(--gui-color-background);
  color: var(--gui-color-text);

  container-type: inline-size;
  container-name: gui-root;

  .gui-grid {
    height: 100%;
    width: 100%;
  }

  .gui-floating {
    position: absolute;

    color: gray;
    /* background-color: hotpink; */
    border-radius: 5px;
    padding-left: 0.5em;
    padding-right: 0.5em;
    background-color: color-mix(in srgb, var(--gui-color-background) 80%, transparent);
    z-index: 1000;

    font-weight: 500;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;

    &.bottom-right {
      bottom: 1rem;
      right: 1rem;
    }
    &.bottom-left {
      bottom: 1rem;
      left: 1rem;
    }
    &.top-right {
      top: 1rem;
      right: 1rem;
    }
    &.top-left {
      top: 1rem;
      left: 1rem;
    }
  }

  .contrast-color {
    background-color: var(--current-bg, var(--gui-color-background));

    /* Contrast Color, https://lea.verou.me/blog/2024/contrast-color/ */
    /* Fallback for browsers that don't support RCS */
    color: white;
    text-shadow: 0 0 .05em black, 0 0 .05em black, 0 0 .05em black, 0 0 .05em black;

    @supports (color: oklch(from red l c h)) {
      --l: clamp(0, (l / 0.623 - 1) * -infinity, 1);
      color: oklch(from var(--current-bg) var(--l) 0 h);
      text-shadow: none;
    }

    /* contrast-color is a future CSS function, this is a fall-forward */
    /* biome-ignore lint/correctness/noUnknownFunction: <above> */
    @supports (color: contrast-color(red)) {
      /* biome-ignore lint/correctness/noUnknownFunction: <above> */
      color: contrast-color(var(--current-bg));
      text-shadow: none;
    }
  }

  .gui-icon {
    height: 1lh;
    width: 1lh;
    background: var(--icon-color, var(--gui-color-text)) center / contain no-repeat;
    -webkit-mask-image: var(--icon);
    mask-image: var(--icon);
    -webkit-mask-size: contain;
    mask-size: contain;
    display: block;
  }
  button.gui-icon-button {
    margin: 0.25em;
    border: 0px;
    border-radius: 4px;
    
    cursor: pointer;
  }
}

.gui-panel {
  border: 1px solid var(--gui-color-border);
  border-radius: 5px;
  overflow: hidden;
}
.gui-panel-header {
  border-bottom: 1px solid var(--gui-color-border);
  /* max-height: calc(var(--gui-font-title-size, 1.5rem) * 2.5); */
}
.gui-panel-title {
  font-family: var(--gui-font-title);
  font-weight: var(--gui-font-title-weight, 900);
  font-size: var(--gui-font-title-size, auto);
  padding-left: 0.75ch;
  box-decoration-break: clone;
  text-transform: uppercase;
  display: block;
}
.gui-panel-content {
  overflow: auto;
  height: calc(100% - var(--gui-font-title-size, 1.5rem) * 1.5);
  font-family: var(--gui-font-monospace);
  font-weight: var(--gui-font-monospace-weight, auto);
  font-size: var(--gui-font-monospace-size, auto);
}
@container gui-root (min-width: 0) {
  .gui-panel-title {
    font-size: var(--gui-font-title-size, auto);
  }
  .gui-panel-content {
    font-size: var(--gui-font-monospace-size, auto);
  }
}